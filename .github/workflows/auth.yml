name: Node.js Package

on:
  push:
    branches:
      - main
      - developer

jobs:

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVELOPMENT_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVELOPMENT_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEVELOPMENT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v3
      - name: Build the Docker image & push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: auth_mfe
          IMAGE_TAG: ${{github.sha}}
        run: |
          ls
          DOCKER_BUILDKIT=1 docker build . --file Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker image ls
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
          
  deployment:
    needs: build
    name: deployment
    runs-on: ubuntu-latest
    steps:
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVELOPMENT_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVELOPMENT_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEVELOPMENT_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - uses: actions/checkout@v3
      - name: checkout code base 
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: auth_mfe
          IMAGE_TAG: ${{github.sha}}

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3
        with:
          version: "v1.24.0"
        id: install
          
      - name: Update kube config
        run: aws eks update-kubeconfig --name development --region eu-west-1

      - name: Deploy to EKS
        run: kubectl apply -f eks.yaml
